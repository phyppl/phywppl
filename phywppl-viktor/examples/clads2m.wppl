/**
 * @file Example: ClaDS2m
 *
 * To run the example use:
 *
 * npm run wppl examples/clads2m.wppl
 *
 */


/**
 * Tree selection
 * uncomment the observed tree that you would like
 * or use the read_phyjson function to read in a tree in the PhyJSON format
 */
//var tree   = phyjs.example_2;
var tree = phyjs.bisse_32;
//var tree =  phyjs.read_phyjson("../../data/bisse_32.phyjson")
//var tree = phylodata.primates_61;
//var tree = phylodata.cetacean_87;
//var tree = phylodata.read_phyjson("example.json")

var MAX_DIV = 20
var MAX_LAMBDA = 20
var MIN_LAMBDA = 1e-6
var PANDA = false


var particles = 5000


/**
 * Model specification
 */
var model = function()
{
    
    // Test settings to compare with analytical CRBD
    var lambda_0 = 0.2
    var sigma = Math.sqrt( 1/gamma( { shape: 1, scale: 1/0.2 } ) )
    var alpha =   Math.exp( gaussian( {mu: 0, sigma: sigma} ) )
    var epsilon  = 0.5   // Corresponds to mu = epsilon*lambda = 0.1
    
    //New variable: probability of large shift at speciation. If 0, collapses to ClaDS2 model.
    var pshift = 0.02
    
    var rho = 0.1

    // Simulate conditionally on the tree
    // It returns all variables of interest
    var ret = simClaDS2m( tree, lambda_0, alpha, sigma, epsilon, rho, pshift)
    
    // Condition on detection
    var max_M = 10000
    var M = M_clads2mGoesUndetected( tree.age, lambda_0, alpha, sigma, epsilon, rho, max_M, pshift)
    factor(Math.log(M))
    return ret
}



/**
 * Inference
 * tweak the number of particles if you want to */
var dist = Infer( {method: 'SMC', particles: particles, model: model} );


/**
 *Print the distribution or the normalization constant
 */
// dist;
dist.normalizationConstant;
